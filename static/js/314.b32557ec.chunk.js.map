{"version":3,"file":"static/js/314.b32557ec.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.1\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","has","set","isAnimationControls","v","start","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","animations","this","stop","runAll","Boolean","Promise","all","map","animation","finished","propName","newValue","timeline","fallback","subscriptions","attachTimeline","cancel","getAll","time","setAll","speed","max","Math","duration","methodName","controls","GroupPlaybackControls","onResolve","onReject","then","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isElementKeyboardAccessible","element","tagName","tabIndex","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","eventOptions","currentTarget","handleKeydown","handleKeyup","addEventListener","removeEventListener","isValidPressEvent","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","setDragLock","axis","transformPropOrder","transformProps","positionalKeys","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","add","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","wake","keepAlive","immediate","requestAnimationFrame","frame","cancelFrame","frameSteps","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","handler","numSubscriptions","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","subscription","on","eventName","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","setMotionValue","hasValue","getValue","addValue","setTarget","transitionEnd","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","_superPropBase","property","hasOwnProperty","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","name","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","currentValue","finalKeyframe","valueAsRead","readValue","scheduleResolve","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","parseCSSVariable","exec","token1","token2","getVariableValue","depth","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","resolvedAt","_resolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","some","getSpringOptions","springOptions","isResolvedFromDuration","visualDuration","PI","derived","spring","resolveSpring","optionsOrVisualDuration","restSpeed","restDelta","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","isClamp","inputLength","isZeroDeltaRange","reverse","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onKeyframesResolved","assign","keyframes$1","mapPercentToKeyframes","mirroredGenerator","generatorFactory","resolvedDuration","totalDuration","play","pause","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isOddIteration","isAnimationFinished","finish","driver","newSpeed","hasChanged","resume","onPlay","tick","calcStartTime","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","isUnsupportedEase","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","animateMotionValue","isHandoff","valueTransition","shouldSkip","supports","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","buildResolvedTypeValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","AnimationFeature","unmountControls","subscribe","updateAnimationControlsSubscription","prevProps","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","unmount","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","SCALE_MIN","SCALE_MAX","calcLength","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","layoutId","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","remove","deregister","Component","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","isSVGElement","SVGElement","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","mount","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","includes","roundPoint","roundAxis","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","ProjectionNode","handleHoverEvent","lifecycle","HoverGesture","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","hover","_element","endEvent","FocusGesture","isFocusVisible","matches","onFocus","onBlur","handlePressEvent","PressGesture","onPressStart","cancelEvents","startPress","onPressEnd","onPointerEnd","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","getAttribute","press","globalTapTarget","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","filterProps","isDom","forwardMotionProps","filteredProps","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","removeSyncCheck","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion"],"sourceRoot":""}