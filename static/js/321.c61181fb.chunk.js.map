{"version":3,"file":"static/js/321.c61181fb.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","images/hero/closeIcon.svg","webpack://ANKONA/./src/components/PopUp/PopUp.module.scss?36de","components/PopUp/PopUp.jsx","webpack://ANKONA/./src/components/ButtonCallBack/ButtonCallBack.module.scss?de2b","components/ButtonCallBack/ButtonCallBack.jsx"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 42,\n    height: 42,\n    viewBox: \"0 0 42 42\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 2.625C10.7625 2.625 2.625 10.7625 2.625 21C2.625 31.2375 10.7625 39.375 21 39.375C31.2375 39.375 39.375 31.2375 39.375 21C39.375 10.7625 31.2375 2.625 21 2.625ZM21 36.75C12.3375 36.75 5.25 29.6625 5.25 21C5.25 12.3375 12.3375 5.25 21 5.25C29.6625 5.25 36.75 12.3375 36.75 21C36.75 29.6625 29.6625 36.75 21 36.75Z\",\n    fill: \"#27120C\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.0875 30.1875L21 23.1L13.9125 30.1875L11.8125 28.0875L18.9 21L11.8125 13.9125L13.9125 11.8125L21 18.9L28.0875 11.8125L30.1875 13.9125L23.1 21L30.1875 28.0875L28.0875 30.1875Z\",\n    fill: \"#27120C\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseIcon);\nexport default __webpack_public_path__ + \"static/media/closeIcon.c251bf446b22db42ff9bebf4c0c7ee6f.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"popUpOverlay\":\"PopUp_popUpOverlay__vVKl+\",\"popUpContent\":\"PopUp_popUpContent__xTUvb\",\"closeButton\":\"PopUp_closeButton__cC48h\",\"closeIcon\":\"PopUp_closeIcon__OcqDu\",\"popUpTitle\":\"PopUp_popUpTitle__vaMyc\",\"popUpDescription__border\":\"PopUp_popUpDescription__border__pv4mW\",\"popUpDescription\":\"PopUp_popUpDescription__WhNgh\",\"popUpForm\":\"PopUp_popUpForm__U7cW9\",\"labelTitle\":\"PopUp_labelTitle__Lt4dH\",\"popUplabel\":\"PopUp_popUplabel__eRRkk\",\"submitButton\":\"PopUp_submitButton__vRwv2\",\"privacyText\":\"PopUp_privacyText__kMKrh\",\"privacyLink\":\"PopUp_privacyLink__rOXZp\",\"success\":\"PopUp_success__fq8KA\",\"error\":\"PopUp_error__WT+rK\",\"privacyContainer\":\"PopUp_privacyContainer__VyyHL\",\"noScroll\":\"PopUp_noScroll__QLGX9\"};","import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { scroller } from 'react-scroll';\nimport emailjs from '@emailjs/browser';\nimport closeIcon from 'images/hero/closeIcon.svg';\nimport translations from 'components/LanguageSelect/translations';\nimport s from './PopUp.module.scss';\n\nconst PopUp = ({ isOpen, onClose, isMobile, closeMobileMenu, language }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add(s.noScroll);\n    } else {\n      document.body.classList.remove(s.noScroll);\n    }\n    return () => {\n      document.body.classList.remove(s.noScroll);\n    };\n  }, [isOpen]);\n\n  const handleScrollToTeam = () => {\n    scroller.scrollTo('team', {\n      smooth: true,\n      offset: -70,\n      duration: 500,\n    });\n    if (isMobile) closeMobileMenu();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsSending(true);\n\n    emailjs\n      .send(\n        'service_ieq508t',\n        'template_s8hk2um',\n        {\n          name,\n          phone,\n          message,\n        },\n        '2o-9qTjArOmik1Uyz'\n      )\n      .then(() => {\n        setStatus('success');\n        setName('');\n        setPhone('');\n        setMessage('');\n      })\n      .catch(() => {\n        setStatus('error');\n      })\n      .finally(() => {\n        setIsSending(false);\n      });\n  };\n\n  const t = translations.popup[language];\n  if (!isOpen) return null;\n\n  return (\n    <div className={s.popUpOverlay} onClick={onClose}>\n      <div className={s.popUpContent} onClick={e => e.stopPropagation()}>\n        <button className={s.closeButton} onClick={onClose}>\n          <img\n            className={s.closeIcon}\n            src={closeIcon}\n            alt=\"closeIcon\"\n            aria-label=\"закрити заявку\"\n          />\n        </button>\n\n        <h2 className={s.popUpTitle}>{t.title}</h2>\n        <p className={s.popUpDescription}>{t.description}</p>\n        <div className={s.popUpDescription__border}></div>\n\n        <form className={s.popUpForm} onSubmit={handleSubmit}>\n          <label>\n            <p className={s.labelTitle}>{t.phnametitle}</p>\n            <input\n              className={s.popUplabel}\n              type=\"text\"\n              placeholder={t.phname}\n              value={name}\n              onChange={e => setName(e.target.value)}\n              required\n            />\n          </label>\n\n          <label>\n            <p className={s.labelTitle}>{t.phphonetitle}</p>\n            <input\n              className={s.popUplabel}\n              type=\"tel\"\n              placeholder=\"+38 (000) 000 00 00\"\n              value={phone}\n              onChange={e => {\n                let value = e.target.value;\n                if (!value.startsWith('+')) {\n                  value = '+' + value.replace(/[^0-9]/g, '');\n                }\n                setPhone(value);\n              }}\n              required\n            />\n          </label>\n\n          <label>\n            <p className={s.labelTitle}>{t.phmessagetitle}</p>\n            <textarea\n              className={s.popUplabel}\n              style={{ minHeight: '96px', marginBottom: '16px' }}\n              placeholder={t.phmessage}\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            ></textarea>\n          </label>\n\n          <button className={s.submitButton} type=\"submit\" disabled={isSending}>\n            {isSending ? t.btnsend : t.btnsubmit}\n          </button>\n\n          {status === 'success' && <p className={s.success}>{t.responsok}</p>}\n          {status === 'error' && <p className={s.error}>{t.responsbad}</p>}\n        </form>\n\n        <div className={s.privacyContainer}>\n          <p className={s.privacyText} style={{ marginBottom: '8px' }}>\n            {t.privacymessage}{' '}\n            <RouterLink\n              to=\"/privacy\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={s.privacyLink}\n            >\n              {t.privacymessagelink}\n            </RouterLink>\n          </p>\n          <p className={s.privacyText}>\n            {t.contactwithteam}{' '}\n            <span className={s.privacyLink} onClick={handleScrollToTeam}>\n              {t.contactwithteamspan}\n            </span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PopUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonCallBack\":\"ButtonCallBack_buttonCallBack__RPMjH\"};","import { useState } from 'react';\nimport PopUp from 'components/PopUp/PopUp';\nimport translations from 'components/LanguageSelect/translations';\nimport s from './ButtonCallBack.module.scss';\n\nconst ButtonCallBack = ({ style, language }) => {\n  const t = translations.hero[language];\n  const [isPopUpOpen, setIsPopUpOpen] = useState(false);\n\n  const openPopUp = () => setIsPopUpOpen(true);\n  const closePopUp = () => setIsPopUpOpen(false);\n\n  return (\n    <>\n      <button className={s.buttonCallBack} style={style} onClick={openPopUp}>\n        {t.button}\n      </button>\n\n      <PopUp isOpen={isPopUpOpen} onClose={closePopUp} language={language} />\n    </>\n  );\n};\n\nexport default ButtonCallBack;\n"],"names":["EmailJSResponseStatus","_status","_text","this","status","text","store","origin","blockHeadless","storageProvider","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","createWebStorage","buildOptions","options","publicKey","toString","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","error","done","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","sendPost","url","data","headers","fetch","method","body","response","message","responseStatus","ok","validateParams","serviceID","templateID","validateTemplateParams","templateParams","isHeadless","navigator","webdriver","languages","length","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","Array","isArray","validateBlockListParams","name","FormData","includes","blockedEmailError","validateLimitRateParams","throttle","id","getLeftTime","storage","Number","lastTime","Date","now","isLimitRateHit","defaultID","limitRateError","send","opts","blockList","limitRate","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","validateForm","form","nodeName","findHTMLForm","document","querySelector","sendForm","currentForm","formData","append","init","isOpen","onClose","isMobile","closeMobileMenu","language","useState","setName","phone","setPhone","setMessage","setStatus","isSending","setIsSending","useEffect","classList","add","s","t","translations","className","onClick","e","stopPropagation","src","closeIcon","alt","title","description","onSubmit","preventDefault","emailjs","catch","finally","phnametitle","type","placeholder","phname","onChange","target","required","phphonetitle","startsWith","replace","phmessagetitle","style","minHeight","marginBottom","phmessage","disabled","btnsend","btnsubmit","responsok","responsbad","privacymessage","to","rel","privacymessagelink","contactwithteam","scroller","smooth","offset","duration","contactwithteamspan","isPopUpOpen","setIsPopUpOpen","button"],"sourceRoot":""}